<template>
    <view id="page" style="width: 100%;height: 100%;">
        <!-- #ifndef MP-WEIXIN -->
        <uni-nav-hfbar fixed status-bar :border="false" left-icon="back" title="售后服务"></uni-nav-hfbar>
        <!-- #endif -->
        <view class="main-wrap" :style="isiphoneBt ? 'padding-bottom: 60rpx;' : ''">
            <!-- content -- start -->
            <view class="content-wrap">
                <scroll-view scroll-y="true" show-scrollbar="false" style="height: 100%;">
                    <view class="main-list">
                        <view class="main-item bg_white" v-for="(pk, index1) in returnList" v-if="pk.packageDtl.length > 0">
                            <view class="store-wrap uni-flex">
                                <view class="store-check" @click="selectPackage(index1)">
                                    <icon class="check-icon" type="success" size="18" :color="pk.select ? '#0097FF' : '#ccc'" />
                                </view>
                                <view class="store-icon iconfont icon-shop"></view>
                                <view class="store-name uni-flex-1">{{ pk.storeName }}</view>
                            </view>
                            <view class="store-goods">
                                <!-- v-if="item.itemType != '6'" -->
                                <view class="goods-item uni-flex" :class="index2 == 0 ? 'first' : ''" v-for="(item,index2) in pk.packageDtl">
                                    <view class="goods-check" @click="selectPackage(index1, index2)">
                                        <icon class="check-icon" type="success" size="18" :color="item.select ? '#0097FF' : '#ccc'" />
                                    </view>
                                    <view class="goods-img">
                                        <image class="img" mode="aspectFit" :lazy-load="true" :src="item.defaultPic != '' ? changeImgSize(item.defaultPic,'360') : ''"></image>
                                    </view>
                                    <view class="goods-info uni-flex-1">
                                        <view class="goods-name font_color_666">{{ item.goodsName }}（{{ item.specification }}）</view>
                                        <view class="goods-price-num uni-flex font_color_666">
                                            <view class="goods-price uni-flex-1">价格：￥{{ item.sellPrice.sellPrice }}</view>
                                            <view class="goods-num uni-flex-1">可退数量：{{ item.canReject }}</view>
                                        </view>
                                        <view class="return-num uni-flex" v-if="item.canReject != 0">
                                            <view class="tit font_color_666">退货数量：</view>
                                            <view class="return-num-wrap uni-flex-1 uni-flex">
                                                <view class="btn btn-sub" @click="lesNum(index1, index2)">-</view>
                                                <view class="num-input uni-flex-1">
                                                    <input class="input" type="number" v-model="item.quantity" @input="inputNum(index1, index2)">
                                                </view>
                                                <view class="btn btn-add" @click="addNum(index1, index2)">+</view>
                                            </view>
                                        </view>
                                    </view>
                                </view>
                            </view>
                        </view>
                    </view>
                    <view class="problem-type-wrap bg_white">
                        <view class="pro-tit">问题类型</view>
                        <view class="pro-list uni-flex">
                            <view class="pro-item uni-flex-1 uni-flex">
                                <view class="pro-check">
                                    <icon class="check-icon" type="success" size="16" @click="questionType = '质量问题';" :color="questionType == '质量问题' ? '#0097FF' : '#ccc'" />
                                </view>
                                <view class="pro-con uni-flex-1">质量问题</view>
                            </view>
                            <view class="pro-item uni-flex-1 uni-flex">
                                <view class="pro-check">
                                    <icon class="check-icon" type="success" size="16" @click="questionType = '描述不符';" :color="questionType == '描述不符' ? '#0097FF' : '#ccc'" />
                                </view>
                                <view class="pro-con uni-flex-1">描述不符</view>
                            </view>
                            <view class="pro-item uni-flex-1 uni-flex">
                                <view class="pro-check">
                                    <icon class="check-icon" type="success" size="16" @click="questionType = '尺寸不对';" :color="questionType == '尺寸不对' ? '#0097FF' : '#ccc'" />
                                </view>
                                <view class="pro-con uni-flex-1">尺寸不对</view>
                            </view>
                            <view class="pro-item uni-flex-1 uni-flex">
                                <view class="pro-check">
                                    <icon class="check-icon" type="success" size="16" @click="questionType = '其他原因';" :color="questionType == '其他原因' ? '#0097FF' : '#ccc'" />
                                </view>
                                <view class="pro-con uni-flex-1">其他原因</view>
                            </view>
                        </view>
                    </view>
                    <view class="problem-des-wrap bg_white">
                        <view class="pro-tit">问题描述</view>
                        <view class="pro-des">
                            <textarea class="des" :maxlength="250" placeholder="请输入您的问题描述" @input="desInput" v-model="memo" />
                        </view>
                        <view class="des-tip">您还可以输入<span class="font_color_common">{{ remnant }}</span>个字</view>
                    </view>
                </scroll-view>
            </view>
            <view class="btn-submit bg_common" @click="submitData">提交</view>
            <!-- content -- end -->
        </view>
    </view>
</template>

<script>
export default {
    data() {
        return {
            isiphoneBt: false,
            returnList: [], //退货商品列表
            questionType: '', // 问题类型
            memo: '', // 问题描述
            txtVal: 0, // 计数
            remnant: 250, // 至多输入250
        }
    },
    onLoad(option) {
        // this.getReturnDtl('20201124035556181078');
        this.getReturnDtl(option.orderNo);
    },
    onShow() {
        // this.getReturnDtl('20201124035556181078');
        // 添加埋点
        let pages = getCurrentPages();
        console.log(pages);
        let currentPage = pages[pages.length-1];
        
        this.reportWXPage(currentPage.options, '申请退货');
        // 添加埋点
    },
    mounted() {
        let _model_ = uni.getStorageSync('_model_');
        if(_model_.indexOf('iPhone X') != -1 || _model_.indexOf('iPhone XR') != -1 || _model_.indexOf('iPhone XS') != -1 || _model_.indexOf('iPhone XS Max') != -1 || _model_.indexOf('iPhone 11') != -1 || _model_.indexOf('iPhone 11 Pro') != -1 || _model_.indexOf('iPhone 11 Pro Max') != -1){
            this.isiphoneBt = true;
        }
    },
    methods: {
        getReturnDtl: function(orderNo) { //获取退货商品数据
            var obj = {};
            obj.orderNos = orderNo;
            this.ebigRequest("/order/list", obj).then((data) => {
                // console.log(data)
                if(data){
                    var order = data[0];
                    var list = [];
                    order.orderPackages.map(item => {
                        var packageObj = {};
                        var packageDtl = [];
                        item.orderPackageDtls.map((itemC, index) => {
                            for(var i = 0; i < order.orderDtls.length; i++){
                                var odtl = order.orderDtls[i];
                                if(odtl.orderDtlId == itemC.orderDtlId){
                                    Object.assign(odtl, {
                                        packageDtlId: itemC.packageDtlId,
                                        select: false,
                                        quantity: itemC.goodsQty - itemC.refundQty,
                                        canReject: itemC.goodsQty - itemC.refundQty,
                                    })
                                    if(odtl.itemType != '6'){
                                        packageDtl.push(odtl);
                                    }
                                    break;
                                }
                            }
                            if(index == item.orderPackageDtls.length - 1){
                                packageObj.packageDtl = packageDtl;
                                packageObj.storeName = item.storeName;
                                packageObj.packageId = item.packageId;
                                packageObj.select = false;
                            }
                        })
                        list.push(packageObj);
                    })
                    this.returnList = list;
                    console.log(this.returnList)
                }
            }).catch(err => {
                
            })
        },
        showInput(item){ //判断是否显示商户全选
            var flag = false;
            if(item){
                item.packageDtl.map((itemC, index) => {
                    if(itemC.canReject > 0){
                        flag = true;
                        return;
                    }
                })
            }
            return flag;
        },
        selectPackage(index, index2) {    // 勾选商品
            if(index2 == undefined){
                this.returnList[index].select = !this.returnList[index].select;
                this.returnList[index].packageDtl.map(res => {
                    if(res.canReject * 1 > 0){
                        res.select = this.returnList[index].select;
                    }
                })
            }else{
                if(this.returnList[index].packageDtl[index2].canReject * 1 == 0){
                    uni.showToast({
                        title: "抱歉！不可以选择可退数量为0的商品",
                        icon: "none",
                    });
                    return;
                }
                var rindex = 0;
                this.returnList[index].packageDtl[index2].select = !this.returnList[index].packageDtl[index2].select;
                this.returnList[index].packageDtl.map(res => {
                    if(res.canReject == 0 || res.select || (res.packagedtlstatus != 2 && res.packagedtlstatus != 3)){
                        rindex++;
                    }
                    this.returnList[index].select = this.returnList[index].packageDtl.length == rindex ? true : false;
                })
            }
        },
        submitData () { // 提交数据
            var selectFlag = false; // 判定用户是否有编辑退货商品
            this.returnList.map((item, index) => { 
                item.packageDtl.map(itemC => {
                    if (itemC.select) {
                        selectFlag = true;
                        return;
                    }
                })
            })
            if (!selectFlag) {
                uni.showToast({
                    title: "请至少选择一个可退商品明细",
                    icon: "none",
                });
                return;
            }
            if (this.memo == '') {
                uni.showToast({
                    title: "问题描述不能为空",
                    icon: "none",
                });
                return;
            }
            if (this.questionType == '') {
                uni.showToast({
                    title: "请选择一个问题类型",
                    icon: "none",
                });
                return;
            }
            var _this = this;
            uni.showModal({
                title: '温馨提示',
                content: '确定要提交了吗？',
                success: function (res) {
                    if (res.confirm) {
                        let requestArr = [];
                        let problemType = ''
                        if (_this.questionType == '质量问题') {
                            problemType = '1';
                        } else if (_this.questionType == '描述不符') {
                            problemType = '2';
                        } else if (_this.questionType == '尺寸不对') {
                            problemType = '3';
                        } else if (_this.questionType == '其他原因') {
                            problemType = '4';
                        }
                        
                        _this.returnList.map((item, index) => {
                            let goodList = [];
                            item.packageDtl.map(itemC => {
                                if(itemC.select){
                                    let good = {
                                        packageDtlId: itemC.packageDtlId,
                                        quantity: itemC.quantity
                                    };
                                    goodList.push(good);
                                }
                            });
                            let requestObj = {
                                aftersaleApplyDtls: goodList,
                                problemType: problemType,
                                describe: _this.memo,
                                packageId: item.packageId,
                            };
                            requestArr.push(requestObj);
                        });
                        var requestStr = JSON.stringify(requestArr);
                        _this.ebigRequest("/aftersale/applyAfterSale", requestStr, false, 'json').then((data) => {
                            if (data) {
                                uni.showToast({
                                    title: "提交成功",
                                    icon: "none",
                                });
                                setTimeout(() => {
                                    uni.navigateBack({
                                        delta: 1,
                                    });
                                }, 500)
                            }
                        }).catch(err => {
                    
                        })
                    } else if (res.cancel) {
                        console.log('用户点击取消');
                    }
                }
            });
        },
        desInput: function(e){ //描述输入
            var txtVal = this.memo.length;
            this.remnant = 250 - txtVal;
        },
        lesNum (index1, index2) { //减少数量
            var curNum = this.returnList[index1].packageDtl[index2].quantity;
            if (parseInt(curNum) == 1) {
                uni.showToast({
                    title: "退货数量不能为0",
                    icon: "none",
                });
                return;
            }
            this.returnList[index1].packageDtl[index2].quantity = --curNum;
        },
        addNum (index1, index2) { //增加数量
            var curNum = parseInt(this.returnList[index1].packageDtl[index2].quantity);
            var maxNum = parseInt(this.returnList[index1].packageDtl[index2].canReject);
            if (curNum == maxNum) {
                uni.showToast({
                    title: "即将超出可退数量,无法操作",
                    icon: "none",
                });
                return;
            }
            this.returnList[index1].packageDtl[index2].quantity = ++curNum;
        },
        inputNum (index1, index2) { //输入数量
            var curNum = parseInt(this.returnList[index1].packageDtl[index2].quantity);
            var maxNum = parseInt(this.returnList[index1].packageDtl[index2].canReject);
            if (curNum > maxNum) {
                uni.showToast({
                    title: "已超出可退数量,无法操作",
                    icon: "none",
                });
                this.returnList[index1].packageDtl[index2].quantity = maxNum;
                return;
            }
            if (curNum <= 0) {
                uni.showToast({
                    title: "退货数量至少为1",
                    icon: "none",
                });
                this.returnList[index1].packageDtl[index2].quantity = 1;
                // return;
            }else{
                // this.package[index1].packageDtl[index2]quantity = 1;
            }
        },
        changeImgSize: function(value, size) { // 原图转成其他尺寸图
			if (value && value != 'img/common/no_img.jpg') {
                var imgSize = '_360x360';
                if(size){
                    if(size == '80'){
                        imgSize = '_80x80';
                    }
                    if(size == '360'){
                        imgSize = '_360x360';
                    }
                    if(size == '800'){
                        imgSize = '_800x800';
                    }
                }
				return value.substring(0, value.lastIndexOf('.')) + imgSize + value.substring(value.lastIndexOf('.'), value.length);
			} else {
				return 'img/no_img.jpg';
			};
        },
    }
}
</script>

<style lang="scss">
page {
    width: 100%;
    height: 100%;
}
.main-wrap {
    width: 100%;
    height: 100%;
    position: relative;
    box-sizing: border-box;
    position: relative;
    .content-wrap {
        width: 100%;
        height: 100%;
        padding-bottom: 100rpx;
        box-sizing: border-box;
        .main-list {
            .main-item {
                .store-wrap {
                    height: 90rpx;
                    line-height: 90rpx;
                    border-bottom: 1px solid #EEEEEE;
                    background-color: #F9F9F9;
                    .store-check {
                        width: 80rpx;
                        height: 100%;
                        position: relative;
                        .check-icon {
                            width: 36rpx;
                            height: 36rpx;
                            line-height: 36rpx;
                            position: absolute;
                            right: 0;
                            left: 0;
                            top: -2rpx;
                            bottom: 0;
                            margin: auto;
                        }
                    }
                    .store-icon {
                        font-size: 40rpx;
                    }
                    .store-name {
                        padding: 0 10rpx 0 10rpx;
                        box-sizing: border-box;
                        overflow: hidden;
                        text-overflow: ellipsis;
                        white-space: nowrap;
                    }
                }
                .store-goods {
                    .goods-item {
                        border-top: 1px solid #EEEEEE;
                        box-sizing: border-box;
                        &.first {
                            border-top: none;
                        }
                        .goods-check {
                            width: 80rpx;
                            height: 200rpx;
                            position: relative;
                            .check-icon {
                                width: 36rpx;
                                height: 36rpx;
                                line-height: 36rpx;
                                position: absolute;
                                right: 0;
                                left: 0;
                                top: 0;
                                bottom: 0;
                                margin: auto;
                            }
                        }
                        .goods-img {
                            width: 200rpx;
                            height: 200rpx;
                            padding: 16rpx;
                            box-sizing: border-box;
                            .img {
                                width: 100%;
                                height: 100%;
                            }
                        }
                        .goods-info {
                            padding: 16rpx 0;
                            box-sizing: border-box;
                            font-size: 32rpx;
                            .goods-name {
                                line-height: 48rpx;
                                font-size: 32rpx;
                            }
                            .goods-price-num {
                                margin-top: 12rpx;
                                font-size: 28rpx;
                                .goods-price {
                                    line-height: 48rpx;
                                }
                                .goods-num {
                                    line-height: 48rpx;
                                }
                            }
                            .return-num {
                                margin-top: 12rpx;
                                .tit {
                                    font-size: 28rpx;
                                    line-height: 48rpx;
                                }
                                .return-num-wrap {
                                    padding: 0 80rpx 0 40rpx;
                                    box-sizing: border-box;
                                    .btn {
                                        width: 48rpx;
                                        height: 48rpx;
                                        line-height: 48rpx;
                                        text-align: center;
                                        font-size: 40rpx;
                                        background-color: #EEEEEE;
                                    }


                                    .num-input {
                                        line-height: 48rpx;
                                        text-align: center;
                                        .input {
                                            width: 100%;
                                            height: 100%;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        .problem-type-wrap {
            margin-top: 20rpx;
            padding: 20rpx;
            box-sizing: border-box;
            .pro-tit {
                font-size: 32rpx;
                line-height: 40rpx;
                padding-bottom: 10rpx;
                box-sizing: border-box;
            }
            .pro-list {
                .pro-item {
                    .pro-check {
                        width: 48rpx;
                        height: 48rpx;
                        position: relative;
                        .check-icon {
                            width: 32rpx;
                            height: 32rpx;
                            position: absolute;
                            right: 0;
                            left: 0;
                            top: -4rpx;
                            bottom: 0;
                            margin: auto;
                        }
                    }
                    .pro-con {
                        line-height: 48rpx;
                    }
                }
            }
        }
        .problem-des-wrap {
            margin-top: 20rpx;
            padding: 20rpx;
            box-sizing: border-box;
            .pro-tit {
                line-height: 40rpx;
                padding-bottom: 10rpx;
                box-sizing: border-box;
                font-size: 32rpx;
            }
            .pro-des {
                .des {
                    width: 100%;
                    border: 2rpx solid rgba(0,0,0,.2);
                    border-radius: 6rpx;
                    padding: 20rpx;
                    box-sizing: border-box;
                    font-size: 28rpx;
                }
            }
            .des-tip {
                line-height: 40rpx;
                margin-top: 10rpx;
                color: #8F8F94;
            }
        }
    }
    .btn-submit {
        width: 100%;
        height: 100rpx;
        line-height: 100rpx;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: 10;
        font-size: 36rpx;
        text-align: center;
        color: #FFFFFF;
    }
}

</style>