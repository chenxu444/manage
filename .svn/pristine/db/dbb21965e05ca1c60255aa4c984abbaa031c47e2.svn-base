<template>
    <view class="orderPayPage">
        <view class="topDiv bg_common">
            <view class="pay_tip font_color_white">{{orderDetails.payStatus == 7 ? '支付失败' : (orderDetails.payStatus == 8 ? '支付结算中' : (orderDetails.payStatus == 2 ? '支付成功' : (orderDetails.payStatus == 3 ? '部分支付' : '待付款')) ) }}</view>
            <view class="pay_tip_des font_color_white">请留意订单处理结果</view>
            <view class="btn_wrap font_color_white">
                <view id="toOrderdetail" class="btnItem" @click="openDetail();">查看订单</view>
                <view id="toIndex" class="btnItem" @click="openIndex();">返回首页</view>
            </view>
        </view>
        <view class="goodsDtl bg_white">
            <view class="store clearfix">
                <view>药店名称：{{orderDetails.storeName}}</view>
                <view>订单号：{{orderDetails.orderNo}}</view>
            </view>
            <view class="goodImg uni-flex" v-for="(goodsItem,index) in goodsList">
                <view class="goodImgDe">
                    <image class="goodImgDeCont" :src="goodsItem.defaultPic | minImage(90)" />
                </view>
                <view class="uni-flex-1" style="margin: 20rpx 20rpx 0;">
                    <view class="tit">{{ goodsItem.goodsName }}</view>
                    <view class="gty">{{ goodsItem.specification }}</view>
                </view>
                <view class="" style="margin-top: 20rpx;">
                    <view class="price">￥{{ priceFixed(goodsItem.sellPrice, 'promoPrice') }}</view>
                    <view class="price" v-if="goodsItem.sellPrice.orgPrice != null && goodsItem.sellPrice.sellPrice != goodsItem.sellPrice.orgPrice">￥{{ priceFixed(goodsItem.sellPrice, 'orgPrice') }}</view>
                    <view class="num">X{{ parseInt(goodsItem.quantity) }}</view>
                </view>
            </view>
        </view>
        <view class="goodNum bg_white">
            <view class="mui-clearfix">
                <p class="mui-pull-left">总金额：</p>
                <p class="mui-pull-right font_color_red">￥{{ totalAmount | tofix2 }}</p>
            </view>
        </view>
    </view>
</template>

<script>
export default {
    components: {},
    data() {
        return {
            orderNos: '',
            orderDetails: {},
			goodsList: [],
			totalReceiptAmount: 0,
			totalAmount: 0,
            recipemoney: '',
            memberId: ''
        };
    },
    onLoad(option) {
        this.orderNos = option.orderNo;
        this.memberId = option.memberId ? option.memberId : '';
        this.getOrderSuccess();
    },
    methods: {
        getOrderSuccess: function () {      // 初始化消息
            // 验证是否缺少单号
            var url = '/order/list';
			var conditions = {};
            conditions.orderNos = this.orderNos;
            if(this.memberId != ''){
                url = '/order/listByGuest';
                conditions.buyMemberId = this.memberId;
            }
            this.ebigRequest(url, conditions, true).then((item) => {
                for (var i = 0; i < item.length; i++) {
                    var orderDetails = item[i];
                    var orderDtls = item[i].orderDtls;
                    this.orderDetails = orderDetails;
                    this.goodsList = orderDtls;
                    this.totalAmount = this.totalAmount + item[i].totalPayAmount;
                    this.totalReceiptAmount = this.totalReceiptAmount + item[i].totalReceiptAmount;
                    this.recipemoney = this.recipemoney;
                }
			})
		},
		openDetail: function () {
            if(this.memberId != ''){
                this.replaceUrl('orderDetail', 'order', 'orderNo=' + this.orderNos + '&memberId=' + this.memberId);
            }else{
                this.replaceUrl('orderDetail', 'order', 'orderNo=' + this.orderNos);
            }
		},
		openPayOrder: function () {
            this.replaceUrl('orderList', 'order', 'status=2');
		},
		openIndex: function () {
			uni.reLaunch({
                url: 'pages/index/index'
            });
        },
        priceFixed(sellPrice, name){
          let price = 0;
          if(sellPrice[name]){
            if(name == 'promoPrice'){
              price = parseFloat(sellPrice[name] ? sellPrice[name] : sellPrice['sellPirce']);
            }else{
              price = parseFloat(sellPrice[name]);
            }
          }
          return price.toFixed(2);
        }
    },
    filters: {
        tofix2(value) {
			if (value != undefined && value != null && value != '') {
				value = parseFloat(value);
				return value.toFixed(2);
			} else {
				return '0.00';
			};
        },
        minImage (value, num) {                // 原图转成小图片
			if (!value) {
				return '../../static/image/default/no_img.jpg';
			} else {
				return value + '?x-oss-process=image/resize,m_mfit,h_' + num + ',w_' + num;
			}
		},
    }
}
</script>

<style lang="scss">
.middleBtn {
    margin: 0 20rpx;
}

.topDiv {
    text-align: center;
    overflow: hidden;
    font-size: 28rpx;
    padding-top: 28rpx;
}

#menu {
    color: #FFFFFF;
}

.goodsDtl {
    width: 94%;
    margin: 12rpx auto;
    border-radius: 16rpx;
}
.pay_tip {
    font-size: 40rpx;
    font-weight: 100;
}
.pay_tip_des {
    margin-top: 30rpx;
    font-size: 32rpx;
    font-weight: 100;
}
.btn_wrap {
    margin: 36rpx 0;

    .btnItem {
        display: inline-block;
        vertical-align: middle;
        font-weight: 100;
        border-radius: 50rpx;
        font-size: 26rpx;
        padding: 6rpx 24rpx;
        box-sizing: border-box;
        border: 1px solid #ECEAEA;
        margin: 0 20rpx;
    }
}
.store {
    line-height: 56rpx;
    padding: 20rpx 24rpx;
    border-bottom: 1px solid #ECEAEA;
    box-sizing: border-box;
}
.goodImg {
    padding: 16rpx 24rpx;
    border-bottom: 1px solid #ECEAEA;
}
.goodImg:last-child {
    border-bottom: none;
}
.goodImgDe {
    width: 160rpx;
    height: 160rpx;
    border: 1px solid #ECEAEA;

    .goodImgDeCont {
        width: 100%;
        height: 100%;
        display: block;
    }
}
.tit, .gty, .price, .num {
    line-height: 60rpx;
}
.price, .num {
    text-align: right;
}
.goodNum {
    width: 94%;
    margin: 12rpx auto;
    border-radius: 16rpx;
    padding: 16rpx 20rpx;
    font-weight: 400;
    line-height: 64rpx;
    box-sizing: border-box;

    p {
        color: #333333;
    }
}

.goodLeft {
    float: left;
}

.goodRight {
    float: right;
}

</style>